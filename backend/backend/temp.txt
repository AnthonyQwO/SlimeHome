問題出在 `prompt_builder.py` 文件中的 JSON 示例部分。JSON 不支持註釋（`//` 開頭的行），這可能導致了解析錯誤。

### 修正 prompt_builder.py 文件：

```python
# prompt_builder.py
# 根據狀態數據建構 AI prompt

from typing import Dict, Any

class PromptBuilder:
    def __init__(self):
        # 基本 prompt 模板
        self.base_template = """
你是控制一個虛擬史萊姆的 AI。請根據提供的資訊，決定史萊姆的下一步行動。

## 當前狀態
- 當前行為：{current_state}（已持續 {duration} 秒）
- 位置：X={x_position}, Y={y_position}(高度), Z={z_position}
- 飽食度：{hunger}/100
- 快樂度：{happiness}/100
- 環境中有食物：{food_present}（{food_position}）
- 最近行為序列：{recent_actions}

## 行為選擇
請從以下選項中選擇一個行為，並提供必要的參數：

1. idle - 原地休息，輕微晃動
   持續時間範圍：2-30 秒
   影響：飽食度緩慢下降(-0.2/秒)，快樂度極緩慢下降(-0.1/秒)

2. walk - 在 X-Z 平面上移動
   方向：指定目標座標 (X, Z)
   速度：慢/中/快
   影響：飽食度下降(-0.5/秒)，快樂度變化(±0.2/秒)

3. jump - 垂直跳躍
   高度：低/中/高
   影響：飽食度下降(-1.0/跳躍)，快樂度上升(+2.0/跳躍)

4. eat - 移動到食物位置並進食
   影響：飽食度上升(+5-20/次)，快樂度上升(+1-5/次)
   需要：環境中有食物

5. frightened - 受驚狀態（通常由系統觸發，如視窗搖晃）
   影響：快樂度下降(-5-10/次)
   持續時間：2-5 秒

## 決策考量
- 飽食度低於 50 時應考慮尋找食物
- 快樂度低於 20 時可能需要更多活動
- 快樂度高於 80 且飽食度足夠(>40)時可考慮跳躍
- 避免連續重複相同行為超過 3 次
- 考慮史萊姆的位置，不要做出無意義的移動

請以 JSON 格式回答，包含選擇的行為和必要的參數：

```json
{
  "action": "行為名稱",
  "params": {
    "參數名稱1": "參數值1",
    "參數名稱2": "參數值2"
  },
  "narration": "史萊姆行為的敘述，解釋為何選擇此行為..."
}
```

必須只返回有效的JSON格式，不要包含任何其他文字或解釋。
"""

    def build_prompt(self, state_data: Dict[str, Any]) -> str:
        """
        根據狀態資料建構完整的提示詞
        
        Args:
            state_data: 史萊姆狀態資料
            
        Returns:
            完整的提示詞
        """
        # 從狀態資料中提取需要的資訊
        current_state = state_data.get("current_state", "idle")
        duration = state_data.get("duration", 0)
        
        # 位置資訊
        position = state_data.get("position", {})
        x_position = position.get("x", 0)
        y_position = position.get("y", 0)
        z_position = position.get("z", 0)
        
        # 屬性資訊
        hunger = state_data.get("hunger", 50)
        happiness = state_data.get("happiness", 50)
        
        # 食物資訊
        food_present = state_data.get("food_present", False)
        food_position = state_data.get("food_position", {})
        if isinstance(food_position, dict):
            food_position_str = f"X={food_position.get('x', 0)}, Z={food_position.get('z', 0)}"
        else:
            food_position_str = "未知"
        
        # 最近行為序列
        recent_actions = state_data.get("recent_actions", [])
        recent_actions_str = ", ".join(recent_actions) if recent_actions else "無"
        
        # 填充模板
        prompt = self.base_template.format(
            current_state=current_state,
            duration=duration,
            x_position=x_position,
            y_position=y_position,
            z_position=z_position,
            hunger=hunger,
            happiness=happiness,
            food_present=str(food_present),
            food_position=food_position_str,
            recent_actions=recent_actions_str
        )
        
        return prompt
```

主要修改是在 JSON 示例部分：原來的代碼中使用了 `//` 風格的注釋，這在 JSON 中是不被支持的。我已將其替換為實際的參數名稱和值示例。

### 更新測試檔案

為了更好地找出問題，我們可以改進測試檔案，讓它顯示更多的調試信息：

```python
# test_builder.py
from prompt_builder import PromptBuilder
import json

# 創建測試資料
test_data = {
    "current_state": "idle",
    "duration": 10,
    "position": {"x": 20, "y": 0, "z": 15},
    "hunger": 65,
    "happiness": 70,
    "food_present": True,
    "food_position": {"x": 35, "y": 0, "z": 15},
    "recent_actions": ["idle", "walk", "idle"]
}

# 初始化 PromptBuilder
builder = PromptBuilder()

# 嘗試建構提示詞
try:
    prompt = builder.build_prompt(test_data)
    print("成功建構提示詞！前 200 字元：")
    print(prompt[:200] + "...")
    
    # 嘗試從提示詞中提取 JSON 示例
    if "```json" in prompt and "```" in prompt.split("```json", 1)[1]:
        json_text = prompt.split("```json", 1)[1].split("```", 1)[0].strip()
        print("\n嘗試解析 JSON 示例：")
        json_obj = json.loads(json_text)
        print("JSON 有效！")
    
except Exception as e:
    print(f"錯誤：{e}")
    import traceback
    traceback.print_exc()
```

使用更新後的檔案再次進行測試：

```bash
python test_builder.py
```

這應該會解決問題，並且你應該能夠看到模板已成功構建。修復後，你可以重啟服務器並再次運行測試腳本。